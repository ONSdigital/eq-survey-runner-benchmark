name: PR

on:
  pull_request:
    branches:
      - main

jobs:
  lint:
    permissions:
      contents: read
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - run: |
          echo "PYTHON_VERSION=$(cat .python-version)" >> $GITHUB_ENV
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Install Poetry
        uses: snok/install-poetry@76e04a911780d5b312d89783f7b1cd627778900a
        with:
          version: 1.8.3
          virtualenvs-create: true
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'poetry'
      - name: Install virtual environment
        run: poetry install
      - name: Lint scripts
        run: make lint
  test:
    permissions:
      contents: read
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - run:
          echo "PYTHON_VERSION=$(cat .python-version)" >> $GITHUB_ENV
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Install Poetry
        uses: snok/install-poetry@76e04a911780d5b312d89783f7b1cd627778900a
        with:
          version: 1.8.3
          virtualenvs-create: true
      - name: Install virtual environment
        run: poetry install
      - name: Running unit tests
        run: make test
  docker-push:
    permissions:
      contents: read
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - name: Tag
        run: |
          CLEAN_TAG=$(echo "${{ github.event.pull_request.head.ref }}" | tr / -)
          echo "TAG=$CLEAN_TAG" >> $GITHUB_ENV
      - name: Build
        run: docker build -t onsdigital/eq-survey-runner-benchmark:$TAG .
      - name: Push
        run: |
          echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
          echo "Pushing with tag [$TAG]"
          docker push onsdigital/eq-survey-runner-benchmark:$TAG
